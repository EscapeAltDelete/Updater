name: Update every hour and allow manual run
on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch latest release
        id: latest
        run: |
          LATEST=$(curl --silent "https://api.github.com/repos/YTLitePlus/YTLitePlus/releases/latest" | jq -r .tag_name)
          if [ "$LATEST" == "null" ]; then
            echo "Latest release not found"
            exit 1
          fi
          echo "version=$LATEST" >> $GITHUB_ENV

      - name: Delete old release
        run: |
          RELEASE_ID=$(curl --silent "https://api.github.com/repos/EscapeAltDelete/Updater/releases/tags/$LATEST" | jq -r '.id')
          curl -X DELETE -H "Authorization: token ${{ secrets.MY_GITHUB_TOKEN }}" "https://api.github.com/repos/EscapeAltDelete/Updater/releases/$RELEASE_ID"

      - name: Download release asset
        run: |
          ASSET_URL=$(curl --silent "https://api.github.com/repos/YTLitePlus/YTLitePlus/releases/latest" | jq -r '.assets[0].browser_download_url')
          if [ "$ASSET_URL" == "null" ]; then
            echo "Asset URL not found"
            exit 1
          fi
          curl -L -o ./assets/ytliteplus.ipa $ASSET_URL
      
      - name: Create new release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: YTLitePlus
          release_name: YTLitePlus
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./assets/ytliteplus.ipa
          asset_name: YTLitePlus.ipa
          asset_content_type: application/octet-stream
